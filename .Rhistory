x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
x<-rnorm(50);y<-rnorm(x);plot(x,y);summary(x);summary(y)
rm(x,y)
rm <- 1:20
rm(rm)
rm
rm()
x<-1:20
w<1+sqrt(x)/2
dummy <- data.frame(x=x, y=x+rnorm(x)*w)
w<-1+sqrt(x)/2
dummy <- data.frame(x=x, y=x+rnorm(x)*w)
plot(dummy)
plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
dummy <- data.frame(x=x, y=x+rnorm(x)*w); plot(dummy)
lm
lm()
?lm
fm<-lm(y~x, data=dummy)
summary(fm)
plot(fm)
plot(fm)
summary(fm)
fm1<-lm(y~x, data=dummy, weight=1/w^2)
summary(fm1)
plot(fm1)
attach(dummy)
plot(x,y)
plot(x,y)
plot(x,y)
plot(x,y)
plot(x,y)
plot(x,y)
?attach
?lm
?lowess
lrf <- lowess(x,y)
lines(x, lrf$y)
abline(0,1,lty=3)
abline(coef(fm))
abline(coef(fm1), col="red")
detach()
plot(fitted(fm), resid(fm), xlab'
'
plot(fitted(fm), resid(fm), xlab="Fitted values", ylab="Residuals", mail="Residuals vs Fitted")
plot(fitted(fm), resid(fm), xlab="Fitted values", ylab="Residuals", main="Residuals vs Fitted")
q()
ls()
plot(FXSrednia)
plot(FXSrednia type="l")
plot(FXSrednia, type="l")
line(FSSpread)
?line
line(FSSpread, 1:length(FSSpread))
line(FSSpread, 1:length(FXSpread))
line(FXSpread, 1:length(FXSpread))
lines(FXSpread, 1:length(FXSpread))
?lines
lines(FXSpread)
lines(FXSpread
;
FXSpread
plot(FXSrednia, type="l")
lines(1:2000)
lines(1000:2000)
plot(FXSrednia, type="l")
lines(FXSrednia)
lines(FXSpread)
plot(FXSpread, type="l")
plot(FXSpread, type="l")
lines(FXSrednia)
names(FXtable)
plot(FXSpread, type="l", names(FXtable))
q()
available.packages()
head(rownames(available.packages()), 3)
head(rownames(available.packages()), 5)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
search()
news
news("1.0.1","ggplot2")
news(Version == "1.0.1",package = "ggplot2")
find.package(devtools)
find.package("devtools")
install.package("devtools")
install.packages("devtools")
library(devtools)
find.package("devtools")
instakk.packages("devtools")
install.packages("devtools")
library(devtools)
find.package("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
rm(list=ls())
swirl()
library(swirl)
swirl()
library(dplyr)
cran<-tbl_df(mydf)
play()
class(mydf)
class(cran)
nxt()
rm("mydf")
cran
?group_by
by_package<-group_by(cran, package)
by_package
play()
?summarize
summarize(by_package,mean(size))
nxt()
summarize(by_package,mean(size))
?n
?n_distinct
submit()
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts<-filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
?chain
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
play()
students
gather(students, sex, count, -grade)
gather(students, sex, count)
gather(students, sex1, count1, -grade)
students
gather(students, sex, count, -grade)
nxt()
student2
students2
res<-gather(students2, sex_class, count, -grade)
res
?separate
separate(res,sex_class,c("sex","class"))
students2
submit()
students3
students3
?gather
submit()
?spread
students3
submit()
extract_numeric("class5")
?mutate
library(dplyr)
?mutate
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
?bind_rows
bind_rows(passed,failed)
sat
?contains
?select
?separate
submit()
submit()
submit()
rmysql
library(rmysql)
install.packages(rmysql)
swirl()
Sys.getlocale("LC_TIME")
play()
info()
play()
0
exit
main()
nxt()
main()
rm(list=ls())
my.locale<-Sys.getlocale("LC_TIME")
chg.locale<-function() Sys.setlocale("en_US.UTF-8")
res.locale<-function() Sys.setlocale(my.locale)
date()
Sys.getlocale("LC_TIME")
chg.locale()
?
help
Sys.getlocale("LC_TIME")
res.locale()
res.locale<-function() Sys.setlocale("LC_TIME"=my.locale)
chg.locale<-function() Sys.setlocale("LC_TIME"="en_US.UTF-8")
Sys.getlocale("LC_TIME")
chg.locale()
?Sys.setlocale
chg.locale<-function() Sys.setlocale("LC_TIME","en_US.UTF-8")
res.locale<-function() Sys.setlocale("LC_TIME",my.locale)
Sys.getlocale("LC_TIME")
chg.locale()
swirl()
libratr(lubridate)
library(lubridate)
help
help(package=lubridate)
this_day<-today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment<-now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
play()
ymd("1989 Maj 17")
mdy("March 12, 1975")
mdy("Marzec 12, 1975")
nxt()
mdy("Marzec 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment<-update(this_moment, hours=9, minutes=7)
this_moment
?now
nyc<-now(tzone="America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart, hours=17, minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008", tz="Singapore")
play()
last_time<-mdy("Czerwiec 17, 2008", tz="Singapore")
nxt()
last_time
play()
last_time<-mdy("6 17, 2008", tz="Singapore")
last_time
nxt()
?new_interval
how_long<-new_interval(last_time, arrive)
play()
how_long
last_time
last_time<-mdy("6 17, 2008", tz="Singapore")
last_time
how_long<-new_interval(last_time, arrive)
how_long
arrive
nxt()
as.period(how_long)
play()
as.period(how_long)
last_time<-mdy("6 17, 2008", tz="Singapore")
last_time
how_long<-new_interval(last_time, arrive)
how_long
as.period(how_long)
nxt()
stopwatch()
rtools
find_rtools()
help(package="rtools")
R.home()
rm(list=ls())
library(kernlab)
data(spam)
set.seed(3435)
trainIndicator=rbinom(nrows(spam), size=1, prob=0.5)
trainIndicator=rbinom(nrow(spam), size=1, prob=0.5)
table(trainIndicator)
trainSpam=spam[trainIndicator==1,]
testSpam=spam[trainIndicator==0,]
hCluster=hclust(dist(t(trainSpam[,1:57])))
plot(hCluster)
hClusterUpdated=hclust(dist(t(log10(trainSpam[,1:55]+1))))
plot(hClusterUpdated)
str(trainSpamm)
str(trainSpam)
table(trainSpam$type)
str(trainSpam$type)
summary(trainSpam$type)
trainSpam$numType=as.numeric(trainSpam$type)-1
costFunction=function(x,y) sum(x!=(y>0.5))
cvError=rep(NA,55)
library(boot)
for (i in 1:55){
lmFormula=reformulate(names(trainSpam)[i], response="numType")
glmFit=glm(lmFormula,family="binomial",data=trainSpam)
CVError[i]=cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
for (i in 1:55){
lmFormula=reformulate(names(trainSpam)[i], response="numType")
glmFit=glm(lmFormula,family="binomial",data=trainSpam)
cvError[i]=cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
warinings()
warnings()
names(trainSpam)[which.min(cvError)]
predictionModel=glm(numType~charDollar, family="binomial", data=trainSpam)
predictionTest=prediction(predictionModel, testSpam)
predictionTest=predict(predictionModel, testSpam)
predictedSpam=rep("nonspam", dim(testSpam)[1])
predictedSpam[predictionModel$fitted>0.5]="spam"
table(predictedSpam, testSpam$type)
(61+458)/(1346+458+61+449)
reformulate("aaaaa", response="numType")
reformulate("aaaaa", response="numTypefsdasfd")
glmFit
str(trainSpam)
str(trainSpam$type)
trainSpam$type
glmFit
class(glmFit)
summay(glmFit)
summary(glmFit)
summary.glm(glmFit)
cv.glm(trainSpam, glmFit, costFunction, 2)
names(trainSpam)[which.min(cvError)]
predictionTest
dim(testSpam)
predictionModel
predictionModel$fitted
rm(list=ls())
zipfile="activity.zip"
datafile="activity.csv"
unz(zipfile,datafile)
setwd("C:/Users/Silverbald/Dysk Google/EDU/Coursera/Data Science/3 Reproducible Research/RepData_PeerAssessment1")
data<-read.csv(unz(zipfile))
data<-read.csv(unz(filename=zipfile))
data<-read.csv(unz(filename="",zipfile))
zipfile=".\\activity.zip"
data<-read.csv(unz(filename="",zipfile))
data<-read.csv(unz("",zipfile))
data<-read.csv(unz("",zipfile))
data<-read.csv(unz(datafile,zipfile))
data<-read.csv(unz(zipfile,datafile))
str(data)
table(data)
head(data)
head(data,20)
table(data$steps)
table(data$date)
head(data)
table(data$interval)
nrow(data)
nrow(data)/61
str(data)
data<-read.csv(unz(zipfile,datafile), stringAsFactors=FALSE)
data<-read.csv(unz(zipfile,datafile), stringsAsFactors=FALSE)
str(data)
data$date1<-as.Date(data$date)
str(data)
data<-read.csv(unz(zipfile,datafile), stringsAsFactors=FALSE)
data$date<-as.Date(data$date)
str(data)
table(steps, date)
table(data$steps, data$date)
table(data$steps ~ data$date)
xtabs(steps~date, data=data)
tmp<-xtabs(steps~date, data=data)
class9tmp
class(tmp)
str(tmp)
xtabs(date~steps, data=data)
xtabs(steps~date, data=data)
tmp
hist(tmp)
steps_per_day<-xtabs(steps~date, data=data)
steps_per_day
```
2. If you do not understand the difference between a histogram and a barplot, research the difference between them. Make a histogram of the total number of steps taken each day
hist(steps_per_day)
mean(steps_per_day)
median(steps_per_day)
mean_steps_per_day<-mean(steps_per_day)
median_steps_per_day<-median(steps_per_day)
hist(tmp)
options()
options$digits
options$digit
options()$digits
options()$scipen
options(scipen)
getOption(scipen)
getOption("scipen")
getOption("scipen")
getOption("digits")
summary(data$interval)
24*60/5
24*60
table(data$interval)
View(data)
time_serie<-data %>% group_by(interval) %>% summarize(average=mean(steps), na.rm=TRUE)
library(dplyr)
time_serie<-data %>% group_by(interval) %>% summarize(average=mean(steps), na.rm=TRUE)
xyplot(time_serie)
library(lattice)
xyplot(time_serie)
time_serie
time_serie<-data %>% group_by(interval) %>% summarize(average=mean(steps), na.rm=F)
time_serie
time_serie<-data %>% group_by(interval) %>% summarize(average=mean(steps, na.rm=TRUE))
time_serie
xyplot(average ~ interval, time_serie)
which.max(time_serie$average)
time_serie(which.max(time_serie$average))$interval
time_serie[which.max(time_serie$average)]$interval
time_serie[which.max(time_serie$average)]
which.max(time_serie$average)
time_serie[which.max(time_serie$average),]$interval
